#!/usr/bin/env python

import os
import sys
import argparse
from argparse import Namespace

from utils.linter import is_node_file
from utils.slack import SlackReporter


def main(args: Namespace):
    client = SlackReporter(
        token=args.token,
        channel=args.channel,
        prefix='ci-eslint-test',
        repository=args.repo_name,
        branch=args.branch_name,
        target=args.base_name,
        pr_number=args.pull_request_number,
        tag='CI_ESLINT_TEST'
    )

    is_installed = False
    for file in args.modified_files:
        if is_node_file(file):
            os.system(f'NODE_ENV=development npm install')
            is_installed = True
            break
    
    if is_installed:
        return_code = os.system('npm run test')
    else:
        return_code = 1
    
    if return_code != 0:
        msg = f'eslint test 실패'
        client.send_slack_message(msg)
        sys.exit(1)
    else:
        sys.exit(0)
    
                

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--modified-files', type=str, default=[], nargs='+', help='modified files')
    parser.add_argument('-t', '--token', type=str, default='', help='slack token')
    parser.add_argument('-c', '--channel', type=str, default='', help='slack channel')
    parser.add_argument('-m', '--min-score', type=float, default=8.0, help='min score')
    parser.add_argument('--repo-name', type=str, default='', help='repository name')
    parser.add_argument('--branch-name', type=str, default='', help='branch name')
    parser.add_argument('--base-name', type=str, default='', help='base branch name')
    parser.add_argument('--base-sha', type=str, default='', help='base branch sha')
    parser.add_argument('--pull-request-number', type=str, default='', help='pull request number')

    args = parser.parse_args()
    main(args)